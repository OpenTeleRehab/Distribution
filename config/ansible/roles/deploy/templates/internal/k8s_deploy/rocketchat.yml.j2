---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: 'app-{{ stage }}-{{ project_name }}-rocketchat'
  namespace: '{{ k8s_namespace }}'
  annotations:
    reloader.stakater.com/auto: 'true'
spec:
  selector:
    matchLabels:
      app: 'app-{{ stage }}-{{ project_name }}-rocketchat'
  template:
    metadata:
      labels:
        app: 'app-{{ stage }}-{{ project_name }}-rocketchat'
    spec:
      imagePullSecrets:
        - name: secret-{{ project_name }}
      containers:
        - image: rocketchat/rocket.chat:3.12.0
          name: 'app-{{ stage }}-{{ project_name }}-rocketchat'
          imagePullPolicy: Always
          ports:
            - containerPort: 3000
          command: ["/bin/sh","-c"]
          args: ["for i in `seq 1 30`; do node main.js && s=$$? && break || s=$$?; echo \"Tried $$i times. Waiting 5 secs...\"; sleep 5; done; (exit $$s)"]
          env:
            - name: ROOT_URL
              value: https://{{ stage }}-chat-rehabilitation.wehost.asia
            - name: MONGO_URL
              value: svc-{{ stage }}-{{ project_name }}-rocketchat-db:27017/rocketchat
            - name: MONGO_OPLOG_URL
              value: svc-{{ stage }}-{{ project_name }}-rocketchat-db:27017/local
            - name: MAIL_URL
              value: smtp://smtp.email
          volumeMounts:
          - name: 'vol-{{ stage }}-{{ project_name }}'
            mountPath: /app/uploads
      volumes:
      - name: 'vol-{{ stage }}-{{ project_name }}'
        persistentVolumeClaim:
          claimName: 'pvc-{{ stage }}-{{ project_id }}-rocketchat'

---
apiVersion: v1
kind: Service
metadata:
  name: 'svc-{{ stage }}-{{ project_name }}-rocketchat'
  namespace: '{{ k8s_namespace }}'
spec:
  ports:
    - port: 3000
  selector:
    app: 'app-{{ stage }}-{{ project_name }}-rocketchat'
