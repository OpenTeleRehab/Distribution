---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: 'app-{{ stage }}-{{ project_name }}-superset'
  namespace: '{{ k8s_namespace }}'
  annotations:
    reloader.stakater.com/auto: 'true'
spec:
  selector:
    matchLabels:
      app: 'app-{{ stage }}-{{ project_name }}-superset'
  template:
    metadata:
      labels:
        app: 'app-{{ stage }}-{{ project_name }}-superset'
    spec:
      imagePullSecrets:
        - name: secret-{{ project_name }}
      initContainers:
        - name: superset-init
          image: {{ superset_image }}
          imagePullPolicy: Always
          command:
            - /bin/bash
            - -c
          args:
            - /app/docker/docker-init.sh
          envFrom:
          - configMapRef:
              name: configmap-{{ stage }}-{{ project_name }}-superset-env
          volumeMounts:
            - name: tz-config
              mountPath: /etc/localtime
            - name: vol-{{ stage }}-{{ project_name }}-superset-command
              mountPath: /app/docker
            - name: vol-{{ stage }}-{{ project_name }}-superset-home
              mountPath: /app/superset_home
      containers:
        - image: {{ superset_image }}
          name: 'app-{{ stage }}-{{ project_name }}-superset'
          imagePullPolicy: Always
          resources: {}
          command:
            - /bin/bash
            - -c
          args:
            - |
              /app/docker/docker-bootstrap.sh app-gunicorn
          envFrom:
          - configMapRef:
              name: configmap-{{ stage }}-{{ project_name }}-superset-env
          ports:
            - containerPort: 8088
          volumeMounts:
          - name: tz-config
            mountPath: /etc/localtime
          - name: vol-{{ stage }}-{{ project_name }}-superset-command
            mountPath: /app/docker
          - name: vol-{{ stage }}-{{ project_name }}-superset-home
            mountPath: /app/superset_home
      volumes:
      - name: tz-config
        hostPath:
          path: {{ tz_path }}
      - name: vol-{{ stage }}-{{ project_name }}-superset-command
        configMap:
          name: configmap-{{ stage }}-{{ project_name }}-superset-command
          defaultMode: 0777
      - name: vol-{{ stage }}-{{ project_name }}-superset-home
        persistentVolumeClaim:
          claimName: 'pvc-{{ stage }}-{{ project_name }}-superset'
---
apiVersion: v1
kind: Service
metadata:
  name: 'svc-{{ stage }}-{{ project_name }}-superset'
  namespace: '{{ k8s_namespace }}'
spec:
  ports:
    - port: 8088
  selector:
    app: 'app-{{ stage }}-{{ project_name }}-superset'



---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: 'app-{{ stage }}-{{ project_name }}-superset-worker'
  namespace: '{{ k8s_namespace }}'
  annotations:
    reloader.stakater.com/auto: 'true'
spec:
  selector:
    matchLabels:
      app: 'app-{{ stage }}-{{ project_name }}-superset-worker'
  template:
    metadata:
      labels:
        app: 'app-{{ stage }}-{{ project_name }}-superset-worker'
    spec:
      imagePullSecrets:
        - name: secret-{{ project_name }}
      containers:
        - image: {{ superset_image }}
          name: 'app-{{ stage }}-{{ project_name }}-superset-worker'
          imagePullPolicy: Always
          resources: {}
          command:
            - /bin/bash
            - -c
          args:
            - |
              /app/docker/docker-bootstrap.sh worker
          envFrom:
          - configMapRef:
              name: configmap-{{ stage }}-{{ project_name }}-superset-env
          ports:
            - containerPort: 8088
          volumeMounts:
          - name: tz-config
            mountPath: /etc/localtime
          - name: vol-{{ stage }}-{{ project_name }}-superset-command
            mountPath: /app/docker
          - name: vol-{{ stage }}-{{ project_name }}-superset-home
            mountPath: /app/superset_home
      volumes:
      - name: tz-config
        hostPath:
          path: {{ tz_path }}
      - name: vol-{{ stage }}-{{ project_name }}-superset-command
        configMap:
          name: configmap-{{ stage }}-{{ project_name }}-superset-command
          defaultMode: 0777
      - name: vol-{{ stage }}-{{ project_name }}-superset-home
        persistentVolumeClaim:
          claimName: 'pvc-{{ stage }}-{{ project_name }}-superset'



---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: 'app-{{ stage }}-{{ project_name }}-superset-worker-beat'
  namespace: '{{ k8s_namespace }}'
  annotations:
    reloader.stakater.com/auto: 'true'
spec:
  selector:
    matchLabels:
      app: 'app-{{ stage }}-{{ project_name }}-superset-worker-beat'
  template:
    metadata:
      labels:
        app: 'app-{{ stage }}-{{ project_name }}-superset-worker-beat'
    spec:
      imagePullSecrets:
        - name: secret-{{ project_name }}
      containers:
        - image: {{ superset_image }}
          name: 'app-{{ stage }}-{{ project_name }}-superset-worker-beat'
          imagePullPolicy: Always
          resources: {}
          command:
            - /bin/bash
            - -c
          args:
            - |
              /app/docker/docker-bootstrap.sh beat
          envFrom:
          - configMapRef:
              name: configmap-{{ stage }}-{{ project_name }}-superset-env
          ports:
            - containerPort: 8088
          volumeMounts:
          - name: tz-config
            mountPath: /etc/localtime
          - name: vol-{{ stage }}-{{ project_name }}-superset-command
            mountPath: /app/docker
          - name: vol-{{ stage }}-{{ project_name }}-superset-home
            mountPath: /app/superset_home
      volumes:
      - name: tz-config
        hostPath:
          path: {{ tz_path }}
      - name: vol-{{ stage }}-{{ project_name }}-superset-command
        configMap:
          name: configmap-{{ stage }}-{{ project_name }}-superset-command
          defaultMode: 0777
      - name: vol-{{ stage }}-{{ project_name }}-superset-home
        persistentVolumeClaim:
          claimName: 'pvc-{{ stage }}-{{ project_name }}-superset'



---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: 'app-{{ stage }}-{{ project_name }}-superset-redis'
  namespace: '{{ k8s_namespace }}'
  annotations:
    reloader.stakater.com/auto: 'true'
spec:
  selector:
    matchLabels:
      app: 'app-{{ stage }}-{{ project_name }}-superset-redis'
  template:
    metadata:
      labels:
        app: 'app-{{ stage }}-{{ project_name }}-superset-redis'
    spec:
      imagePullSecrets:
        - name: secret-{{ project_name }}
      containers:
        - image: {{ superset_redis_image }}
          name: 'app-{{ stage }}-{{ project_name }}-superset-redis'
          imagePullPolicy: Always
          resources: {}
          envFrom:
          - configMapRef:
              name: configmap-{{ stage }}-{{ project_name }}-superset-env
          ports:
            - containerPort: 6379
          volumeMounts:
          - name: tz-config
            mountPath: /etc/localtime
          - name: vol-{{ stage }}-{{ project_name }}
            mountPath: /data
            subPath: superset-redis
      volumes:
      - name: tz-config
        hostPath:
          path: {{ tz_path }}
      - name: vol-{{ stage }}-{{ project_name }}
        persistentVolumeClaim:
          claimName: 'pvc-{{ stage }}-{{ project_name }}'

---
apiVersion: v1
kind: Service
metadata:
  name: 'svc-{{ stage }}-{{ project_name }}-superset-redis'
  namespace: '{{ k8s_namespace }}'
spec:
  ports:
    - port: 6379
  selector:
    app: 'app-{{ stage }}-{{ project_name }}-superset-redis'
