---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: 'app-{{ stage }}-{{ project_name }}-rocketchat-db'
  namespace: '{{ k8s_namespace }}'
  annotations:
    reloader.stakater.com/auto: 'true'
spec:
  selector:
    matchLabels:
      app: 'app-{{ stage }}-{{ project_name }}-rocketchat-db'
  template:
    metadata:
      labels:
        app: 'app-{{ stage }}-{{ project_name }}-rocketchat-db'
    spec:
      imagePullSecrets:
        - name: secret-{{ project_name }}
      containers:
        - image: mongo:4.4.17
          name: 'app-{{ stage }}-{{ project_name }}-rocketchat-db'
          imagePullPolicy: Always
          ports:
            - containerPort: 27017
          volumeMounts:
          - name: 'vol-{{ stage }}-{{ project_name }}'
            mountPath: /data/db
          command: ["/bin/sh","-c"]
          args: ["mongod --bind_ip 0.0.0.0 --oplogSize 512 --replSet rs0"]
      volumes:
      - name: 'vol-{{ stage }}-{{ project_name }}'
        persistentVolumeClaim:
          claimName: 'pvc-{{ stage }}-{{ project_id }}-rocketchat-db'

---
apiVersion: v1
kind: Service
metadata:
  name: 'svc-{{ stage }}-{{ project_name }}-rocketchat-db'
  namespace: '{{ k8s_namespace }}'
spec:
  ports:
    - port: 27017
  selector:
    app: 'app-{{ stage }}-{{ project_name }}-rocketchat-db'



---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: 'app-{{ stage }}-{{ project_name }}-rocketchat-db-init'
  namespace: '{{ k8s_namespace }}'
  annotations:
    reloader.stakater.com/auto: 'true'
spec:
  selector:
    matchLabels:
      app: 'app-{{ stage }}-{{ project_name }}-rocketchat-db-init'
  template:
    metadata:
      labels:
        app: 'app-{{ stage }}-{{ project_name }}-rocketchat-db-init'
    spec:
      imagePullSecrets:
        - name: secret-{{ project_name }}
      containers:
        - image: mongo:4.4.17
          name: 'app-{{ stage }}-{{ project_name }}-rocketchat-db-init'
          imagePullPolicy: Always
          ports:
            - containerPort: 27017
          command: ["/bin/sh","-c"]
          args: ["for i in `seq 1 30`; do
                   mongo svc-{{ stage }}-{{ project_name }}-rocketchat-db/rocketchat --eval \"
                     rs.initiate({
                       _id: 'rs0',
                       members: [ { _id: 0, host: '127.0.0.1:27017' } ]})\" &&
                   s=$$? && break || s=$$?;
                   echo \"Tried $$i times. Waiting 5 secs...\";
                   sleep 5;
                 done; (exit $$s)"]
