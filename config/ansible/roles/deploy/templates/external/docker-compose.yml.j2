---

version: '3'
networks:
  hiv-docker-net:

volumes:
  rocketchat_db_data:
  rocketchat_uploads:

services:
  traefik:
    container_name: 'traefik'
    image: 'traefik:v2.4'
    restart: unless-stopped
    networks:
      - hiv-docker-net
    command:
      - '--api.dashboard=true'
      - '--api.debug=true'
      - '--providers.docker=true'
      - '--providers.docker.exposedbydefault=false'
      - '--entrypoints.web.address=:80'
      - '--entrypoints.websecure.Address=:443'
      - '--accessLog=true'
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock:ro'
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`staging-traefik.wehost.asia`)"
      - "traefik.http.routers.traefik.entrypoints=web"
      - "traefik.http.routers.traefik.service=api@internal"
      - "traefik.http.services.traefik.loadbalancer.server.port=8080"

  admin_webapp:
    container_name: admin_webapp
    image: {{ image_name }}/{{ stage }}/admin-webapp:{{ version }}
    restart: unless-stopped
    networks:
      - hiv-docker-net
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.admin_webapp.rule=Host(`{{ admin_webapp_domain }}`)'
      - 'traefik.http.routers.admin_webapp.entrypoints=web'
      - 'traefik.http.routers.admin_webapp.service=admin_webapp'
      - 'traefik.http.services.admin_webapp.loadbalancer.server.port=80'

  therapist_webapp:
    container_name: therapist_webapp
    image: {{ image_name }}/{{ stage }}/therapist-webapp:{{ version }}
    restart: unless-stopped
    networks:
      - hiv-docker-net
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.therapist_webapp.rule=Host(`{{ therapist_webapp_domain }}`)'
      - 'traefik.http.routers.therapist_webapp.entrypoints=web'
      - 'traefik.http.routers.therapist_webapp.service=therapist_webapp'
      - 'traefik.http.services.therapist_webapp.loadbalancer.server.port=80'

  admin_service:
    container_name: admin_service
    image: {{ image_name }}/{{ stage }}/admin-service:{{ version }}
    restart: unless-stopped
    networks:
      - hiv-docker-net

  therapist_service:
    container_name: therapist_service
    image: {{ image_name }}/{{ stage }}/therapist-service:{{ version }}
    restart: unless-stopped
    networks:
      - hiv-docker-net

  patient_service:
    container_name: patient_service
    image: {{ image_name }}/{{ stage }}/patient-service:{{ version }}
    restart: unless-stopped
    networks:
      - hiv-docker-net

  keycloak:
    container_name: keycloak
    image: {{ image_name }}/sts-keycloak:latest
    restart: unless-stopped
    networks:
      - hiv-docker-net
    environment:
      DB_VENDOR: MYSQL
      DB_ADDR: {{ mysql_host_keycloak }}
      DB_DATABASE: {{ mysql_name_keycloak }}
      DB_USER: {{ mysql_user_keycloak }}
      DB_PASSWORD: {{ mysql_pass_keycloak }}
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: {{ keycloak_admin_pass }}
      PROXY_ADDRESS_FORWARDING: 'true'
      JAVA_OPTS: '-Dkeycloak.profile.feature.scripts=enabled
                  -Dkeycloak.profile.feature.upload_scripts=enabled -server -Xms64m -Xmx512m
                  -XX:MetaspaceSize=96M -XX:MaxMetaspaceSize=256m -Djava.net.preferIPv4Stack=true
                  -Djboss.modules.system.pkgs=org.jboss.byteman -Djava.awt.headless=true'
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.keycloak.rule=Host(`{{ keycloak_domain }}`)'
      - 'traefik.http.routers.keycloak.entrypoints=web'
      - 'traefik.http.routers.keycloak.service=keycloak'
      - 'traefik.http.services.keycloak.loadbalancer.server.port=8080'

  rocketchat:
    container_name: rocketchat
    image: rocketchat/rocket.chat:3.12.0
    restart: unless-stopped
    networks:
      - hiv-docker-net
    command: >
      bash -c
        "for i in `seq 1 30`; do
          node main.js &&
          s=$$? && break || s=$$?;
          echo \"Tried $$i times. Waiting 5 secs...\";
          sleep 5;
        done; (exit $$s)"
    volumes:
      - rocketchat_uploads:/app/uploads
    environment:
      - PORT=3000
      - ROOT_URL=http://localhost:3000
      - MONGO_URL=mongodb://rocketchat_mongo:27017/rocketchat
      - MONGO_OPLOG_URL=mongodb://rocketchat_mongo:27017/local
    depends_on:
      - rocketchat_mongo
    ports:
      - 3000:3000

  rocketchat_mongo:
    container_name: rocketchat_mongo
    image: mongo:3.6.9
    networks:
      - hiv-docker-net
    volumes:
      - rocketchat_db_data:/data/db
    command: mongod --smallfiles --oplogSize 128 --replSet rs0 --storageEngine=mmapv1

  rocketchat_mongo-init-replica:
    image: mongo:3.6.9
    networks:
      - hiv-docker-net
    command: >
      bash -c
        "for i in `seq 1 30`; do
          mongo rocketchat_mongo/rocketchat --eval \"
            rs.initiate({
              _id: 'rs0',
              members: [ { _id: 0, host: 'localhost:27017' } ]})\" &&
          s=$$? && break || s=$$?;
          echo \"Tried $$i times. Waiting 5 secs...\";
          sleep 5;
        done; (exit $$s)"
    depends_on:
      - rocketchat_mongo
