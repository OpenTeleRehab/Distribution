---

version: '3'
networks:
  hiv-docker-net:
  meet.jitsi:

volumes:
  rocketchat_db_data:
  rocketchat_uploads:
  admin_service_vol:
  therapist_service_vol:
  patient_service_vol:

services:
  traefik:
    container_name: 'traefik'
    image: 'traefik:v2.4'
    restart: unless-stopped
    networks:
      - hiv-docker-net
    command:
      - '--api.dashboard=true'
      - '--api.debug=true'
      - '--providers.docker=true'
      - '--providers.docker.exposedbydefault=false'
      - '--entrypoints.web.address=:80'
      - '--entrypoints.websecure.Address=:443'
      - '--accessLog=true'
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock:ro'
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`traefik.open-rehab.org`)"
      - "traefik.http.routers.traefik.service=api@internal"
      - "traefik.http.services.traefik.loadbalancer.server.port=8080"
      - "traefik.http.routers.traefik.middlewares=traefik-auth"
      - "traefik.http.middlewares.traefik-auth.basicauth.users=open-rehab:$$apr1$$vlo596z0$$uUJJ9FicOxIi2jz0Y0F3A0"

  admin_webapp:
    container_name: admin_webapp
    image: {{ image_name }}/{{ stage }}/admin-webapp:latest
    restart: unless-stopped
    networks:
      - hiv-docker-net
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.admin_webapp.rule=Host(`{{ admin_webapp_url }}`)'
      - 'traefik.http.routers.admin_webapp.service=admin_webapp'
      - 'traefik.http.services.admin_webapp.loadbalancer.server.port=80'

  therapist_webapp:
    container_name: therapist_webapp
    image: {{ image_name }}/{{ stage }}/therapist-webapp:latest
    restart: unless-stopped
    networks:
      - hiv-docker-net
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.therapist_webapp.rule=Host(`{{ therapist_webapp_url }}`)'
      - 'traefik.http.routers.therapist_webapp.service=therapist_webapp'
      - 'traefik.http.services.therapist_webapp.loadbalancer.server.port=80'

  library_webapp:
    container_name: library_webapp
    image: {{ image_name }}/{{ stage }}/hicadmin-webapp:latest
    restart: unless-stopped
    networks:
      - hiv-docker-net
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.library_webapp.rule=Host(`{{ hicadmin_webapp_url }}`)'
      - 'traefik.http.routers.library_webapp.service=library_webapp'
      - 'traefik.http.services.library_webapp.loadbalancer.server.port=80'

  admin_service:
    container_name: admin_service
    image: {{ image_name }}/{{ stage }}/admin-service:latest
    restart: unless-stopped
    environment:
      LOCAL_USER_ID: 1000
    ports:
      - "2081:80"
    networks:
      - hiv-docker-net
    volumes:
      - ./config/adminservice/storage:/var/www/storage

  therapist_service:
    container_name: therapist_service
    image: {{ image_name }}/{{ stage }}/therapist-service:latest
    restart: unless-stopped
    environment:
      LOCAL_USER_ID: 1000
    ports:
      - "2082:80"
    networks:
      - hiv-docker-net
    volumes:
      - ./config/therapistservice/storage:/var/www/storage

  patient_service:
    container_name: patient_service
    image: {{ image_name }}/{{ stage }}/patient-service:latest
    restart: unless-stopped
    environment:
      LOCAL_USER_ID: 1000
    networks:
      - hiv-docker-net
    volumes:
      - ./config/patientservice/storage:/var/www/storage

  library_service:
    container_name: library_service
    image: {{ image_name }}/{{ stage }}/hicadmin-service::latest
    restart: unless-stopped
    environment:
      LOCAL_USER_ID: 1000
    networks:
      - hiv-docker-net
    volumes:
      - ./config/libraryservice/storage:/var/www/storage

  keycloak:
    container_name: keycloak
    image: {{ image_name }}/keycloak:latest
    restart: unless-stopped
    networks:
      - hiv-docker-net
    volumes:
      - ./config/keycloak/theme.properties:/opt/jboss/keycloak/themes/hi/login/theme.properties
      - ./config/keycloak/theme.properties:/opt/jboss/keycloak/themes/open-library/login/theme.properties
    environment:
      DB_VENDOR: MYSQL
      DB_ADDR: {{ my_host }}
      DB_DATABASE: {{ mysql_name_keycloak }}
      DB_USER: {{ mysql_user_keycloak }}
      DB_PASSWORD: {{ mysql_pass_keycloak }}
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: {{ keycloak_admin_pass }}
      PROXY_ADDRESS_FORWARDING: 'true'
      JAVA_OPTS: '-Dkeycloak.profile.feature.scripts=enabled
                  -Dkeycloak.profile.feature.upload_scripts=enabled -server -Xms64m -Xmx512m
                  -XX:MetaspaceSize=96M -XX:MaxMetaspaceSize=256m -Djava.net.preferIPv4Stack=true
                  -Djboss.modules.system.pkgs=org.jboss.byteman -Djava.awt.headless=true'

  krakend:
    container_name: krakend
    image: {{ image_name }}/{{ stage }}/krakend:latest
    restart: unless-stopped
    networks:
      - hiv-docker-net
    extra_hosts:
      - "{{ vn_patient_service }}:{{ vn_patient_host }}"

  rocketchat:
    container_name: rocketchat
    image: rocketchat/rocket.chat:3.12.0
    restart: unless-stopped
    networks:
      - hiv-docker-net
    command: >
      bash -c
        "for i in `seq 1 30`; do
          node main.js &&
          s=$$? && break || s=$$?;
          echo \"Tried $$i times. Waiting 5 secs...\";
          sleep 5;
        done; (exit $$s)"
    volumes:
      - rocketchat_uploads:/app/uploads
    environment:
      - PORT=3000
      - ROOT_URL=https://{{ rocketchat_url }}
      - MONGO_URL=mongodb://rocketchat_mongo:27017/rocketchat
      - MONGO_OPLOG_URL=mongodb://rocketchat_mongo:27017/local
    depends_on:
      - rocketchat_mongo
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.rocketchat.rule=Host(`{{ rocketchat_url }}`)'
      - 'traefik.http.routers.rocketchat.service=rocketchat'
      - 'traefik.http.services.rocketchat.loadbalancer.server.port=3000'

  rocketchat_mongo:
    container_name: rocketchat_mongo
    image: mongo:3.6.9
    networks:
      - hiv-docker-net
    volumes:
      - rocketchat_db_data:/data/db
    command: mongod --smallfiles --oplogSize 128 --replSet rs0 --storageEngine=mmapv1

  rocketchat_mongo-init-replica:
    container_name: rocketchat_mongo-init-replica
    image: mongo:3.6.9
    networks:
      - hiv-docker-net
    command: >
      bash -c
        "for i in `seq 1 30`; do
          mongo rocketchat_mongo/rocketchat --eval \"
            rs.initiate({
              _id: 'rs0',
              members: [ { _id: 0, host: 'localhost:27017' } ]})\" &&
          s=$$? && break || s=$$?;
          echo \"Tried $$i times. Waiting 5 secs...\";
          sleep 5;
        done; (exit $$s)"
    depends_on:
      - rocketchat_mongo

  jitsi_web:
    container_name: jitsi_web
    image: jitsi/web:latest
    restart: ${RESTART_POLICY}
    networks:
      hiv-docker-net:
      meet.jitsi:
        aliases:
          - ${XMPP_DOMAIN}
    volumes:
      - ${CONFIG}/web:/config:Z
      - ${CONFIG}/web/logo/watermark.svg:/usr/share/jitsi-meet/images/watermark.svg
      - ${CONFIG}/transcripts:/usr/share/jitsi-meet/transcripts:Z
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.jitsi_web.rule=Host(`{{ jitsi_url }}`)'
      - 'traefik.http.routers.jitsi_web.service=jitsi_web'
      - 'traefik.http.services.jitsi_web.loadbalancer.server.port=80'
    environment:
      - ENABLE_LETSENCRYPT
      - ENABLE_HTTP_REDIRECT
      - ENABLE_HSTS
      - ENABLE_XMPP_WEBSOCKET
      - DISABLE_HTTPS
      - LETSENCRYPT_DOMAIN
      - LETSENCRYPT_EMAIL
      - LETSENCRYPT_USE_STAGING
      - PUBLIC_URL
      - TZ
      - AMPLITUDE_ID
      - ANALYTICS_SCRIPT_URLS
      - ANALYTICS_WHITELISTED_EVENTS
      - BRIDGE_CHANNEL
      - CALLSTATS_CUSTOM_SCRIPT_URL
      - CALLSTATS_ID
      - CALLSTATS_SECRET
      - CHROME_EXTENSION_BANNER_JSON
      - CONFCODE_URL
      - CONFIG_EXTERNAL_CONNECT
      - DEPLOYMENTINFO_ENVIRONMENT
      - DEPLOYMENTINFO_ENVIRONMENT_TYPE
      - DEPLOYMENTINFO_USERREGION
      - DIALIN_NUMBERS_URL
      - DIALOUT_AUTH_URL
      - DIALOUT_CODES_URL
      - DROPBOX_APPKEY
      - DROPBOX_REDIRECT_URI
      - DYNAMIC_BRANDING_URL
      - ENABLE_AUDIO_PROCESSING
      - ENABLE_AUTH
      - ENABLE_CALENDAR
      - ENABLE_FILE_RECORDING_SERVICE
      - ENABLE_FILE_RECORDING_SERVICE_SHARING
      - ENABLE_GUESTS
      - ENABLE_IPV6
      - ENABLE_LIPSYNC
      - ENABLE_NO_AUDIO_DETECTION
      - ENABLE_P2P
      - ENABLE_PREJOIN_PAGE
      - ENABLE_WELCOME_PAGE
      - ENABLE_CLOSE_PAGE
      - ENABLE_RECORDING
      - ENABLE_REMB
      - ENABLE_REQUIRE_DISPLAY_NAME
      - ENABLE_SIMULCAST
      - ENABLE_STATS_ID
      - ENABLE_STEREO
      - ENABLE_SUBDOMAINS
      - ENABLE_TALK_WHILE_MUTED
      - ENABLE_TCC
      - ENABLE_TRANSCRIPTIONS
      - ETHERPAD_PUBLIC_URL
      - ETHERPAD_URL_BASE
      - GOOGLE_ANALYTICS_ID
      - GOOGLE_API_APP_CLIENT_ID
      - INVITE_SERVICE_URL
      - JICOFO_AUTH_USER
      - MATOMO_ENDPOINT
      - MATOMO_SITE_ID
      - MICROSOFT_API_APP_CLIENT_ID
      - NGINX_RESOLVER
      - NGINX_WORKER_PROCESSES
      - NGINX_WORKER_CONNECTIONS
      - PEOPLE_SEARCH_URL
      - RESOLUTION
      - RESOLUTION_MIN
      - RESOLUTION_WIDTH
      - RESOLUTION_WIDTH_MIN
      - START_AUDIO_ONLY
      - START_AUDIO_MUTED
      - DISABLE_AUDIO_LEVELS
      - ENABLE_NOISY_MIC_DETECTION
      - START_BITRATE
      - DESKTOP_SHARING_FRAMERATE_MIN
      - DESKTOP_SHARING_FRAMERATE_MAX
      - START_VIDEO_MUTED
      - TESTING_CAP_SCREENSHARE_BITRATE
      - TESTING_OCTO_PROBABILITY
      - XMPP_AUTH_DOMAIN
      - XMPP_BOSH_URL_BASE
      - XMPP_DOMAIN
      - XMPP_GUEST_DOMAIN
      - XMPP_MUC_DOMAIN
      - XMPP_RECORDER_DOMAIN
      - TOKEN_AUTH_URL


  # XMPP server
  jitsi_prosody:
    container_name: jitsi_prosody
    image: jitsi/prosody:latest
    restart: ${RESTART_POLICY}
    networks:
      hiv-docker-net:
      meet.jitsi:
        aliases:
          - ${XMPP_SERVER}
    ports:
      - '5222:5222'
      - '5347:5347'
      - '5280:5280'
    volumes:
      - ${CONFIG}/prosody/config:/config:Z
      - ${CONFIG}/prosody/prosody-plugins-custom:/prosody-plugins-custom:Z
    environment:
      - AUTH_TYPE
      - ENABLE_AUTH
      - ENABLE_GUESTS
      - ENABLE_LOBBY
      - ENABLE_XMPP_WEBSOCKET
      - GLOBAL_MODULES
      - GLOBAL_CONFIG
      - LDAP_URL
      - LDAP_BASE
      - LDAP_BINDDN
      - LDAP_BINDPW
      - LDAP_FILTER
      - LDAP_AUTH_METHOD
      - LDAP_VERSION
      - LDAP_USE_TLS
      - LDAP_TLS_CIPHERS
      - LDAP_TLS_CHECK_PEER
      - LDAP_TLS_CACERT_FILE
      - LDAP_TLS_CACERT_DIR
      - LDAP_START_TLS
      - XMPP_DOMAIN
      - XMPP_AUTH_DOMAIN
      - XMPP_GUEST_DOMAIN
      - XMPP_MUC_DOMAIN
      - XMPP_INTERNAL_MUC_DOMAIN
      - XMPP_MODULES
      - XMPP_MUC_MODULES
      - XMPP_INTERNAL_MUC_MODULES
      - XMPP_RECORDER_DOMAIN
      - XMPP_CROSS_DOMAIN
      - JICOFO_COMPONENT_SECRET
      - JICOFO_AUTH_USER
      - JICOFO_AUTH_PASSWORD
      - JVB_AUTH_USER
      - JVB_AUTH_PASSWORD
      - JIGASI_XMPP_USER
      - JIGASI_XMPP_PASSWORD
      - JIBRI_XMPP_USER
      - JIBRI_XMPP_PASSWORD
      - JIBRI_RECORDER_USER
      - JIBRI_RECORDER_PASSWORD
      - JWT_APP_ID
      - JWT_APP_SECRET
      - JWT_ACCEPTED_ISSUERS
      - JWT_ACCEPTED_AUDIENCES
      - JWT_ASAP_KEYSERVER
      - JWT_ALLOW_EMPTY
      - JWT_AUTH_TYPE
      - JWT_TOKEN_AUTH_MODULE
      - LOG_LEVEL
      - PUBLIC_URL
      - TZ

  # Focus component
  jitsi_jicofo:
    container_name: jitsi_jicofo
    image: jitsi/jicofo:latest
    restart: ${RESTART_POLICY}
    networks:
      hiv-docker-net:
      meet.jitsi:
    volumes:
      - ${CONFIG}/jicofo:/config:Z
    environment:
      - AUTH_TYPE
      - BRIDGE_AVG_PARTICIPANT_STRESS
      - BRIDGE_STRESS_THRESHOLD
      - ENABLE_AUTH
      - ENABLE_AUTO_OWNER
      - ENABLE_CODEC_VP8
      - ENABLE_CODEC_VP9
      - ENABLE_CODEC_H264
      - ENABLE_RECORDING
      - ENABLE_SCTP
      - JICOFO_COMPONENT_SECRET
      - JICOFO_AUTH_USER
      - JICOFO_AUTH_PASSWORD
      - JICOFO_ENABLE_BRIDGE_HEALTH_CHECKS
      - JICOFO_CONF_INITIAL_PARTICIPANT_WAIT_TIMEOUT
      - JICOFO_CONF_SINGLE_PARTICIPANT_TIMEOUT
      - JICOFO_ENABLE_HEALTH_CHECKS
      - JICOFO_SHORT_ID
      - JICOFO_RESERVATION_ENABLED
      - JICOFO_RESERVATION_REST_BASE_URL
      - JIBRI_BREWERY_MUC
      - JIBRI_REQUEST_RETRIES
      - JIBRI_PENDING_TIMEOUT
      - JIGASI_BREWERY_MUC
      - JIGASI_SIP_URI
      - JVB_BREWERY_MUC
      - MAX_BRIDGE_PARTICIPANTS
      - OCTO_BRIDGE_SELECTION_STRATEGY
      - TZ
      - XMPP_DOMAIN
      - XMPP_AUTH_DOMAIN
      - XMPP_INTERNAL_MUC_DOMAIN
      - XMPP_MUC_DOMAIN
      - XMPP_SERVER
    depends_on:
      - jitsi_prosody

  # Video bridge
  jitsi_jvb:
    container_name: jitsi_jvb
    image: jitsi/jvb:latest
    restart: ${RESTART_POLICY}
    networks:
      hiv-docker-net:
      meet.jitsi:
        aliases:
          - jvb.meet.jitsi
    ports:
      - '${JVB_PORT}:${JVB_PORT}/udp'
      - '${JVB_TCP_PORT}:${JVB_TCP_PORT}'
    volumes:
      - ${CONFIG}/jvb:/config:Z
    environment:
      - DOCKER_HOST_ADDRESS
      - XMPP_AUTH_DOMAIN
      - XMPP_INTERNAL_MUC_DOMAIN
      - XMPP_SERVER
      - JVB_AUTH_USER
      - JVB_AUTH_PASSWORD
      - JVB_BREWERY_MUC
      - JVB_PORT
      - JVB_TCP_HARVESTER_DISABLED
      - JVB_TCP_PORT
      - JVB_TCP_MAPPED_PORT
      - JVB_STUN_SERVERS
      - JVB_ENABLE_APIS
      - JVB_WS_DOMAIN
      - JVB_WS_SERVER_ID
      - PUBLIC_URL
      - TZ
    depends_on:
      - jitsi_prosody
