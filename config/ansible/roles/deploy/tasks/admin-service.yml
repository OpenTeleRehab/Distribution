---

- name: AdminService | Clone Admin service repos
  git:
    repo: git@git.web-essentials.asia:hiv-tra-20/admin-service.git
    dest: '{{ workspace }}/admin-service'
    accept_hostkey: yes
    version: master
    force: yes

- name: Sync local storage to shared folder
  shell: 'rsync -avz {{ workspace }}/admin-service/storage/ /export/{{ stage }}/{{ project_id }}/admin-service/'

- name: Change permission mode
  shell: 'find . -not -path "*/cache*" -type d -exec chmod 0777 {} \;'
  args:
    chdir: '/export/{{ stage }}/{{ project_id }}/admin-service'

- name: AdminService | Copy deployment configuration
  template:
    src: 'internal/admin-service/{{ item }}.j2'
    dest: '{{ workspace }}/admin-service/{{ item }}'
    mode: 0755
  loop:
    - default.conf
    - Dockerfile

- name: AdminService | Run composer to install dependencies
  shell: '{{ php_bin }} {{ composer_bin }} install {{ composer_flags }}'
  args:
    chdir: '{{ workspace }}/admin-service'

- name: AdminService | Build docker image
  shell: 'docker build -t {{ stage }}-admin-service:latest .'
  args:
    chdir: '{{ workspace }}/admin-service'
  when: lookup('env', 'JENKINS_HOME')

- name: AdminService | Tag docker image to hub.web-essentials.co
  shell: 'docker tag {{ stage }}-admin-service:latest {{ image_name }}/{{ stage }}/admin-service:{{ item }}'
  args:
    chdir: '{{ workspace }}/admin-service'
  loop:
    - '{{ version }}'
    - latest
  when: lookup('env', 'JENKINS_HOME')

- name: AdminService | Push docker image to hub.web-essentials.co
  shell: 'docker push {{ image_name }}/{{ stage }}/admin-service:{{ item }}'
  args:
    chdir: '{{ workspace }}/admin-service'
  loop:
    - '{{ version }}'
    - latest
  when: lookup('env', 'JENKINS_HOME')

- name: Deploy Admin Service
  shell: 'KUBECONFIG={{ kubeconfig }} kubectl apply -f {{ workspace }}/k8s-deploy/adminservice.yml'
  when: lookup('env', 'JENKINS_HOME')

- name: Remove build file
  file:
    path: '/var/tmp/{{ project_id }}/{{ stage }}-admin-service-build'
    state: absent
