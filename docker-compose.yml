---
networks:
  docker-net:
    name: docker-net
    external:
      true

volumes:
  admin_service_db_data:
  therapist_service_db_data:
  patient_service_db_data:
  vn_patient_service_db_data:
  open_library_service_db_data:
  phone_service_db_data:
  keycloak_db_data:
  rocketchat_db_data:
  rocketchat_uploads:

services:
  proxy:
    image: traefik:v2.5
    networks:
      - docker-net
    volumes:
    - '/var/run/docker.sock:/var/run/docker.sock:ro'
    - './config/docker/traefik-config.yaml:/etc/traefik/traefik.yaml'
    - './config/docker/ssl:/certs/'
    ports:
    - '80:80'
    - '443:443'
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.proxy.rule=Host(`local-traefik.wehost.asia`)"
      - "traefik.http.routers.proxy.tls=true"
      - "traefik.http.routers.proxy.service=api@internal"
      - "traefik.http.services.proxy.loadbalancer.server.port=8080"

  #############
  ### Client ###
  #############
  client_web_app:
    image: nginx:1.26.3
    networks:
      - docker-net
    volumes:
      - ./config/docker/client-webapp/default.conf:/etc/nginx/conf.d/default.conf
      #- ./config/docker/client-webapp/default_none_hi.conf:/etc/nginx/conf.d/default_none_hi.conf
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.client-webapp.tls=true'
      - 'traefik.http.routers.client-webapp.rule=Host(`${ADMIN_HOST}`) || Host(`${THERAPIST_HOST}`) || Host(`${PATIENT_HOST}`) || Host(`${PHONE_HOST}`) || Host(`${LIBRARY_HOST}`)  || Host(`${NONHI_ADMIN_HOST}`) || Host(`${NONHI_THERAPIST_HOST}`) || Host(`${NONHI_PATIENT}`) '
      - 'traefik.http.routers.client-webapp.service=client-webapp'
      - 'traefik.http.services.client-webapp.loadbalancer.server.port=80'
      - "traefik.http.middlewares.serviceheaders.headers.accesscontrolalloworiginlist=*"
      - "traefik.http.routers.client_web_app.middlewares=serviceheaders"

  ############ ###
  ### Keycloak ###
  ################
  keycloak:
    build: ../keycloak/
    networks:
      - docker-net
    command: start
    environment:
      KC_DB: mysql
      KC_DB_URL: jdbc:mysql://${KC_SERVICE_DB_NAME}:3306/${KC_DB_NAME}
      KC_DB_USERNAME: ${KC_DB_USER}
      KC_DB_PASSWORD: ${KC_DB_PASS}
      KEYCLOAK_ADMIN: ${KC_ADMIN_USER}
      KEYCLOAK_ADMIN_PASSWORD: ${KC_ADMIN_PASS}
      KC_HOSTNAME_STRICT: "false"
      KC_HOSTNAME_STRICT_HTTPS: 'false'
      KC_HTTP_RELATIVE_PATH: "/auth"
      KC_PROXY: "edge"
      PROXY_ADDRESS_FORWARDING: 'true'
      JAVA_OPTS: '-Dkeycloak.profile.feature.scripts=enabled
                  -Dkeycloak.profile.feature.upload_scripts=enabled -server -Xms64m -Xmx512m
                  -XX:MetaspaceSize=96M -XX:MaxMetaspaceSize=256m -Djava.net.preferIPv4Stack=true
                  -Djboss.modules.system.pkgs=org.jboss.byteman -Djava.awt.headless=true'
    depends_on:
      - keycloak_db

  keycloak_db:
    image: mysql:8.3
    networks:
      - docker-net
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    volumes:
      - keycloak_db_data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASS}
      MYSQL_USER: ${KC_DB_USER}
      MYSQL_PASSWORD: ${KC_DB_PASS}
      MYSQL_DATABASE: ${KC_DB_NAME}

  ###########
  # Krakend #
  ###########
  krakend:
    image: docker.io/devopsfaith/krakend:2.7.2
    networks:
      - docker-net
    volumes:
      - ../krakend/config/krakend:/etc/krakend
    environment:
      FC_ENABLE: 1
      FC_SETTINGS: settings

  #############
  ### Admin ###
  #############
  admin_web_app:
    image: node:22.0
    command:
      - npm
      - start
    working_dir: /usr/src/app
    volumes:
      - ../admin-web-app:/usr/src/app
    networks:
      - docker-net
    environment:
      NODE_ENV: development
    stdin_open: true
    tty: true
    depends_on:
      - keycloak
      - krakend

  admin_service:
    build: ../admin-service
    networks:
      - docker-net
    environment:
      LOCAL_USER_ID: ${USER_ID}
    volumes:
      - ../admin-service:/var/www/html
      - ./config/service/default.conf:/etc/nginx/sites-available/default
      - ./config/service/php.ini:/etc/php/8.3/fpm/php.ini
      - ./config/service/queue-worker.conf:/etc/supervisor/conf.d/queue-worker.conf
    depends_on:
      - admin_service_db

  admin_service_db:
    image: docker.io/mysql:8.3
    networks:
      - docker-net
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    volumes:
      - admin_service_db_data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASS}
      MYSQL_USER: ${ADMIN_DB_USER}
      MYSQL_PASSWORD: ${ADMIN_DB_PASS}
      MYSQL_DATABASE: ${ADMIN_DB_NAME}

  #############
  ### Therapist ###
  #############
  therapist_web_app:
    image: node:22.0
    command:
      - npm
      - start
    working_dir: /usr/src/app
    volumes:
      - ../therapist-web-app:/usr/src/app
    networks:
      - docker-net
    environment:
      NODE_ENV: development
    stdin_open: true
    tty: true
    depends_on:
      - keycloak
      - krakend

  therapist_service:
    image: wehostasia/laravel:nginx-php-8.3
    networks:
      - docker-net
    environment:
      LOCAL_USER_ID: ${USER_ID}
    volumes:
      - ../therapist-service:/var/www/html
      - ./config/service/default.conf:/etc/nginx/sites-available/default
      - ./config/service/php.ini:/etc/php/8.3/fpm/php.ini
    depends_on:
      - keycloak
      - therapist_service_db

  therapist_service_db:
    image: docker.io/mysql:8.3
    networks:
      - docker-net
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    volumes:
      - therapist_service_db_data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASS}
      MYSQL_USER: ${THERAPIST_DB_USER}
      MYSQL_PASSWORD: ${THERAPIST_DB_PASS}
      MYSQL_DATABASE: ${THERAPIST_DB_NAME}

  ###################
  # Patient Service #
  ###################
  patient_service:
    image: wehostasia/laravel:nginx-php-8.3
    networks:
      - docker-net
    environment:
      LOCAL_USER_ID: ${USER_ID}
    volumes:
      - ../patient-service:/var/www/html
      - ./config/service/default.conf:/etc/nginx/sites-available/default
      - ./config/service/php.ini:/etc/php/8.3/fpm/php.ini
    depends_on:
      - patient_service_db

  patient_service_db:
    image: mysql:8.3
    networks:
      - docker-net
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    volumes:
      - patient_service_db_data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASS}
      MYSQL_USER: ${PATIENT_DB_USER}
      MYSQL_PASSWORD: ${PATIENT_DB_PASS}
      MYSQL_DATABASE: ${PATIENT_DB_NAME}

  ######################
  # VN Patient Service #
  ######################
  patient_vn_service:
    image: wehostasia/laravel:nginx-php-8.3
    networks:
      - docker-net
    environment:
      LOCAL_USER_ID: ${USER_ID}
    volumes:
      - ../patient-service:/var/www/html
      - ../patient-service/.env.example.vn:/var/www/html/.env
      - ./config/service/default.conf:/etc/nginx/sites-available/default
      - ./config/service/php.ini:/etc/php/8.3/fpm/php.ini
    depends_on:
      - vn_patient_service_db

  vn_patient_service_db:
    image: mysql:8.3
    networks:
      - docker-net
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    volumes:
      - vn_patient_service_db_data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASS}
      MYSQL_USER: ${VNPATIENT_DB_USER}
      MYSQL_PASSWORD: ${VNPATIENT_DB_PASS}
      MYSQL_DATABASE: ${VNPATIENT_DB_NAME}

  ######################
  # Phone Service #
  ######################
  phone_service:
    image: wehostasia/laravel:nginx-php-8.3
    networks:
      - docker-net
    environment:
      LOCAL_USER_ID: ${USER_ID}
    volumes:
      - ../phone-service:/var/www/html
      - ./config/service/default.conf:/etc/nginx/sites-available/default
      - ./config/service/php.ini:/etc/php/8.3/fpm/php.ini
    depends_on:
      - phone_service_db

  phone_service_db:
    image: mysql:8.3
    networks:
      - docker-net
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    volumes:
      - phone_service_db_data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASS}
      MYSQL_USER: ${PHONE_DB_USER}
      MYSQL_PASSWORD: ${PHONE_DB_PASS}
      MYSQL_DATABASE: ${PHONE_DB_NAME}

  #############
  ### Open Library ###
  #############
  library_web_app:
    image: node:22.0
    command:
      - npm
      - start
    working_dir: /usr/src/app
    volumes:
      - ../open-library-web-app:/usr/src/app
    networks:
      - docker-net
    environment:
      NODE_ENV: development
    stdin_open: true
    tty: true
    depends_on:
      - keycloak
      - krakend

  library_service:
    build: ../open-library-service/
    environment:
      LOCAL_USER_ID: ${USER_ID}
    volumes:
      - ../open-library-service:/var/www/html
      - ./config/service/default.conf:/etc/nginx/sites-available/default
      - ./config/service/php.ini:/etc/php/8.3/fpm/php.ini
    networks:
      - docker-net
    depends_on:
      - keycloak
      - open_library_service_db

  open_library_service_db:
    image: mysql:8.3
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    volumes:
      - open_library_service_db_data:/var/lib/mysql
    networks:
      - docker-net
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASS}
      MYSQL_USER: ${LIBRARY_DB_USER}
      MYSQL_PASSWORD: ${LIBRARY_DB_PASS}
      MYSQL_DATABASE: ${LIBRARY_DB_NAME}

  #############
  ### Rocket Chat ###
  #############
  rocketchat:
    image: rocketchat/rocket.chat:7.1.0
    volumes:
      - rocketchat_uploads:/app/uploads
    environment:
      - PORT=3000
      - ROOT_URL=https://local-hi-chat.wehost.asia
      - MONGO_URL=mongodb://${MONGO_SERVICE_NAME}:27017/rocketchat?directConnection=true
      - MONGO_OPLOG_URL=mongodb://${MONGO_SERVICE_NAME}:27017/local?replicaSet=rs0&directConnection=true
      - MAIL_URL=smtp://smtp.email
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.${ROCKETCHAT_SERVICE_NAME}.tls=true'
      - 'traefik.http.routers.${ROCKETCHAT_SERVICE_NAME}.rule=Host(`${ROCKETCHAT_HOST}`)'
      - 'traefik.http.routers.${ROCKETCHAT_SERVICE_NAME}.service=${ROCKETCHAT_SERVICE_NAME}'
      - 'traefik.http.services.${ROCKETCHAT_SERVICE_NAME}.loadbalancer.server.port=3000'
    networks:
      - docker-net
    stdin_open: true
    tty: true
    depends_on:
      - mongo

  mongo:
    image: bitnami/mongodb:7.0.15
    volumes:
      - rocketchat_db_data:/bitnami/mongodb
    networks:
      - docker-net
    environment:
      MONGODB_REPLICA_SET_MODE: primary
      MONGODB_REPLICA_SET_NAME: rs0
      MONGODB_INITIAL_PRIMARY_HOST: mongo
      ALLOW_EMPTY_PASSWORD: 'yes'

  # This container's job is for accessing database via user interface
  adminer:
    image: adminer:latest
    networks:
      - docker-net
    env_file:
      - ./config/adminer/adminer_servers.env
    ports:
      - "8060:8080"
    volumes:
      - ./config/adminer/login-servers.php:/var/www/html/plugins-enabled/login-servers.php

  mailpit:
    image: axllent/mailpit:latest
    networks:
      - docker-net
    ports:
      - "8025:8025"
